from ctypes import CDLL
from ctypes.util import find_library

libc = CDLL(find_library("c"))

# Generate the seed
s = 0
for c in 'Gommage':
    s = ord(c) + s * 31


to_crack = list('Ygta_u3G_t0h_0aG_r3')

bitmask = len(to_crack)

# Replicate shuffle
libc.srand(s)
original_swap = []
for i in range(bitmask - 1, 0, -1):
    ran_num = libc.rand() % (i + 1)
    key_pair = (i, ran_num)
    original_swap.append(key_pair)

# Swap the values around
reversed_swap = [(value, key) for key, value in original_swap][::-1]


for v, k in reversed_swap:
    to_crack[v], to_crack[k] = to_crack[k], to_crack[v]

answer = ''.join(to_crack)
print(answer)
